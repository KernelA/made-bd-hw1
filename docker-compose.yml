version: "3.5"

x-data-node-common: &datanode-common
  image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
  restart: always
  environment:
    SERVICE_PRECONDITION: "namenode:9870"
  env_file:
    - ./docker-hadoop/hadoop.env

services:
  namenode:
    build:
      context: ./docker-hadoop/namenode
    container_name: namenode
    restart: always
    ports:
      - '9870:9870'
      - '9000:9000'
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./docker-hadoop/hadoop.env
    volumes:
      - ./input:/mnt/input
      - ./output:/mnt/output
      - ./scripts:/mnt/scripts

  datanode1:
    <<: *datanode-common
    container_name: datanode1
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    depends_on:
      namenode:
        condition: service_healthy
      
  datanode2: 
    <<: *datanode-common
    container_name: datanode2
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    depends_on:
      namenode:
        condition: service_healthy

  datanode3:
    <<: *datanode-common
    container_name: datanode3
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    depends_on:
      namenode:
        condition: service_healthy
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864"
    env_file:
      - ./docker-hadoop/hadoop.env
    depends_on:
      namenode:
        condition: service_started
      datanode1:
        condition: service_started
      datanode2:
        condition: service_started
      datanode3:
        condition: service_started
    ports:
      - '8088:8088'

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    build:
      context: ./docker-hadoop/nodemanager
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
    depends_on:
      namenode:
        condition: service_started
      datanode1:
        condition: service_started
      datanode2:
        condition: service_started
      datanode3:
        condition: service_started
      resourcemanager:
        condition: service_started
    env_file:
      - ./docker-hadoop/hadoop.env
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
    depends_on:
      namenode:
        condition: service_started
      datanode1:
        condition: service_started
      datanode2:
        condition: service_started
      datanode3:
        condition: service_started
      resourcemanager:
        condition: service_started
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./docker-hadoop/hadoop.env
  
volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  hadoop_datanode3:
  hadoop_historyserver:
